* Jackson笔记
** 解析JSON
使用jackson有三种解析方式：
*** Streaming
使用JsonParser解析json流，使用JsonGenerator生成Json.
#+BEGIN_SRC java
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonToken;

JsonFactory factory = new JsonFactory();
JsonParser parser = factory.createParser(new URL(url));
while(parser.isClosed()){
JsonToken token = parser.nextToken();

}
#+END_SRC

*** Tree Traversing
将json整个读入JsonNode
#+BEGIN_SRC java
  import com.fasterxml.jackson.databind.JsonNode;
  import com.fasterxml.jackson.databind.ObjectMapper;

  // 创建ObjectMapper实例
  ObjectMapper mapper = new ObjectMapper();
  // 使用ObejectMapper读取json字符串并创建一颗树
  JsonNode node = mapper.readTree(json_string);
#+END_SRC
*** Data binding
将json转换成java POJO对象
#+BEGIN_SRC java
import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;

 ObjectMapper mapper = new ObjectMapper();
 mapper.disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);
 Albums albums = mapper.readValue(new URL(url), Albums.class);
#+END_SRC
** 生成json
*** create json from java
#+BEGIN_SRC java
ObjectMapper mapper = new ObjectMapper();
mapper.configure(SerializationFeature.INDENT_OUTPUT, true);
mapper.configure(SerializationFeature.ORDER_MAP_ENTRIES_BY_KEYS, true);
mapper.setDateFormat(outputFormat);
mapper.setPropertyNamingStrategy(new PropertyNamingStrategy(){}}
mapper.setSerializationInclusion(Include.NON_EMPTY);
mapper.writeValue(System.out, album);
#+END_SRC
*** create json using a tree model
#+BEGIN_SRC java
  import com.fasterxml.jackson.core.JsonFactory;
  import com.fasterxml.jackson.core.JsonGenerator;
  import com.fasterxml.jackson.databind.JsonNode;
  import com.fasterxml.jackson.databind.ObjectMapper;
  import com.fasterxml.jackson.databind.node.JsonNodeFactory;

  // Create the node factory that gives us nodes.
  JsonNodeFactory factory = new JsonNodeFactory(false);
 
  // create a json factory to write the treenode as json. for the example
  // we just write to console
  JsonFactory jsonFactory = new JsonFactory();
  JsonGenerator generator = jsonFactory.createGenerator(System.out);
  ObjectMapper mapper = new ObjectMapper();
 
  // the root node - album
  JsonNode album = factory.objectNode();
  album.put("Album-Title", "Kind Of Blue");
  ArrayNode links = factory.arrayNode();
  links.add("link1").add("link2");
  album.put("links", links);

  mapper.writeTree(generator, album);
#+END_SRC
*** Creating JSON Stream
#+BEGIN_SRC java
  import com.fasterxml.jackson.core.JsonFactory;
  import com.fasterxml.jackson.core.JsonGenerator;

  JsonFactory factory = new JsonFactory();
  JsonGenerator generator = factory.createGenerator(new FileWriter(new File("albums.json")));

  // start writing with {
  generator.writeStartObject();
  generator.writeFieldName("title");
  generator.writeString("Free Music Archive - Albums");
  generator.writeFieldName("dataset");
  // start an array
  generator.writeStartArray();
  generator.writeStartObject();
  generator.writeStringField("album_title", "A.B.A.Y.A.M");
  generator.writeEndObject();
  generator.writeEndArray();
  generator.writeEndObject();

  generator.close();
#+END_SRC
